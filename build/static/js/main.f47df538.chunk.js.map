{"version":3,"sources":["reportWebVitals.ts","assests/images/marvel_image.jpg","components/Home/Home.tsx","components/Dashboard/Dashboard.tsx","components/Signin/Signin.tsx","api/server.ts","components/CustomHooks/FetchData.ts","redux/slices/rootSlice.ts","components/MarvelForm/MarvelForm.tsx","components/DataTable/DataTable.tsx","redux/store.ts","index.tsx","firebaseConfig.ts"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","root","padding","margin","navbar_container","display","justifyContent","alignItems","logo","logo_a","color","logo_navigation","listStyle","textTransform","textDecoration","navigation","nav_a","main","backgroundImage","marvel_image","width","height","backgroundSize","backgroundRepeat","backgroundPosition","position","main_text","textAlign","top","left","transform","Home","props","classes","className","to","fallback","title","Button","variant","drawerWidth","theme","createStyles","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","menuText","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","toolbar_button","Dashboard","withRouter","console","log","history","useTheme","useState","open","setOpen","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","itemsList","text","onClick","push","onclick","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","Typography","noWrap","anchor","paper","direction","Divider","List","map","item","index","ListItem","button","ListItemText","primary","Alert","elevation","googleButton","backgroundColor","marginTop","border","boxShadow","fontSize","lineHeight","borderRadius","fontFamily","cursor","googleLogo","typographyStyle","containerStyle","snackBar","SignIn","auth","useAuth","handleSnackClose","_event","reason","sign_in","a","signInWithPopup","firebase","GoogleAuthProvider","user","sign_out","signOut","Container","maxWidth","htmlFor","name","placeholder","type","Snackbar","message","autoHideDuration","onClose","severity","token","server_calls","get","fetch","method","headers","response","ok","Error","json","data","body","JSON","stringify","update","id","delete","useGetData","heroData","setData","handleDataFetch","result","useEffect","getData","rootSlice","createSlice","initialState","ability","description","camera_quality","flight_time","max_speed","Origin","weight","cost_of_prod","series","reducers","chooseName","state","action","payload","chooseability","reducer","actions","MarvelForm","dispatch","useDispatch","store","useStore","useSelector","useForm","register","handleSubmit","onSubmit","event","window","location","reload","target","reset","getState","columns","field","headerName","DataTable","React","gridData","handleClose","style","rows","pageSize","checkboxSelection","onRowSelected","configureStore","devTools","ReactDOM","render","StrictMode","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.f47df538.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/marvel_image.c10134d8.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport marvel_image from '../../assests/images/marvel_image.jpg';\nimport { Link } from 'react-router-dom';\nimport { AuthCheck } from 'reactfire'; // New Import\nconst useStyles = makeStyles({\n    root: {\n        padding: '0',\n        margin: '0'\n    },\n    navbar_container: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n    logo: {\n        margin: '0 0 0 0.45em'\n    },\n    logo_a: {\n        color: 'rgb(28,24,22)'\n    },\n    logo_navigation: {\n        listStyle: 'none',\n        textTransform: 'uppercase',\n        textDecoration: 'none'\n    },\n    navigation: {\n        display: 'flex'\n    },\n    nav_a: {\n        display: 'block',\n        padding: '1em',\n        color: 'black'\n    },\n    main: {\n        backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url(${marvel_image});`,\n        width: '100%',\n        height: '100%',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        position: 'absolute',\n    },\n    main_text: {\n        textAlign: 'center',\n        position: 'relative',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        color: 'white'\n    }\n\n})\n\ninterface Props {\n    title: string;\n}\n\n\nexport const Home = (props: Props) => {\n\n    // New classes variable code\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            {/* New and Updated HTML Code */}\n            <nav>\n                <div className={classes.navbar_container}>\n                    <h1 className={`${classes.logo}`} >\n                        <Link to='/' className={` ${classes.logo_a} ${classes.logo_navigation}`}>My Marvel Inventory</Link>\n                    </h1>\n                    <ul className={` ${classes.navigation} ${classes.logo_navigation}`}>\n                        <li>\n                            <Link to='/' className={classes.nav_a}>Home</Link>\n                        </li>\n                        <li>\n                            <Link to='/dashboard' className={classes.nav_a}>Dashboard</Link>\n                        </li>\n                        <AuthCheck fallback={\n                            <li>\n                                <Link to=\"/signin\" className={classes.nav_a}>Sign In</Link>\n                            </li>\n                        }>\n                        \n                        <li>\n                            <Link to=\"/dashboard\" className={classes.nav_a}>Dashboard</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/signin\" className={classes.nav_a}>Sign Out</Link>\n                        </li>\n                        </AuthCheck>\n                       \n                        <li>\n                            <Link to='/contactus' className={classes.nav_a}>Contact Us</Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n\n            {/* Main Image Area */}\n            <main className={classes.main}>\n                <div className={classes.main_text}>\n                    <h1>{props.title}</h1>\n                    <p>Let Us Show you our Heroes</p>\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n\n                    <Button color=\"primary\" variant=\"contained\">Let's Start!</Button>\n\n                </div>\n\n            </main>\n\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport {\n    Drawer as MUIDrawer,\n    ListItem,\n    List,\n    ListItemIcon,\n    ListItemText,\n    Theme,\n    useTheme,\n    makeStyles,\n    createStyles,\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    Divider,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport clsx from 'clsx';\nimport { RouteComponentProps, withRouter, Switch, Route } from 'react-router-dom';\nimport { DataTable, MarvelForm, } from '..';\nimport { set } from 'react-hook-form';\nimport { isClassExpression } from 'typescript';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen\n            }),\n        },\n        appBarShift: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n            transition: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        menuText: {\n            marginRight: theme.spacing(2),\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0, 1),\n            // necessary content below the app bar\n            ...theme.mixins.toolbar,\n            justifyContent: 'flex-end',\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            marginLeft: -drawerWidth,\n        },\n        contentShift: {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen\n            }),\n            marginLeft: 0,\n        },\n        toolbar: {\n            display: 'flex',\n        },\n        toolbar_button: {\n            marginLeft: 'auto'\n        }\n    }),\n);\n\n\ninterface DashProps {\n    history: RouteComponentProps['history'];\n    location: RouteComponentProps['location'];\n    match: RouteComponentProps['match']\n}\n\n\nexport const Dashboard = withRouter((props: DashProps) => {\n    console.log(props)\n    const { history } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false)\n    const [dialogOpen, setDialogOpen] = useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n// Handle Dialog Open/Close\nconst handleDialogClickOpen = () => {\n    setDialogOpen(true);\n  }\n\n  const handleDialogClickClose = () => {\n    setDialogOpen(false);\n  }\n\n\n\n\n\n<Button className={classes.toolbar_button} onClick={handleDialogClickOpen}>Create New Hero</Button>\n\n{/*Dialog Pop Up begin */}\n<Dialog open={dialogOpen} onClose={handleDialogClickClose} aria-labelledby=\"form-dialog-title\">\n<DialogTitle id=\"form-dialog-title\">Add New Hero</DialogTitle>\n<DialogContent>\n  <DialogContentText>Add A New Hero</DialogContentText>\n    <MarvelForm />\n</DialogContent>\n<DialogActions>\n  <Button onClick = {handleDialogClickClose} color=\"primary\">Cancel</Button>\n  <Button onClick={handleDialogClickClose} color = \"primary\">Done</Button> \n</DialogActions>\n\n</Dialog>\n    const itemsList = [\n        {\n            text: 'Home',\n            onClick: () => history.push('/')\n        },\n        {\n            text: 'Sign In',\n            onclick: () => history.push('/signin')\n        },\n        {\n            text: 'Inventory',\n            onClick: () => history.push('/Dashboard')\n        },\n        {\n            text: 'About Us',\n            onclick: () => history.push('/signin')\n        },\n        {\n            text: 'Contact Us',\n            onClick: () => history.push('/')\n        },\n        {\n            text: 'Log Out',\n            onclick: () => history.push('/signin')\n        },\n\n    ]\n\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position='fixed'\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        color='inherit'\n                        aria-label='open drawer'\n                        onClick={handleDrawerOpen}\n                        edge='start'\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant='h6' noWrap>\n                        Dashboard\n                    </Typography>\n                    <Button className={classes.toolbar_button}>Add a Hero</Button>\n                </Toolbar>\n            </AppBar>\n            <MUIDrawer\n                className={classes.drawer}\n                variant='persistent'\n                anchor='left'\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {itemsList.map((item, index) => {\n                        const { text, onClick } = item;\n                        return (\n                            <ListItem button key={text} onClick={onClick} >\n                                <ListItemText className={classes.menuText} primary={text} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </MUIDrawer>\n\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n\n                <h1>Recent Add-Ons</h1>\n\n                <DataTable />\n            </main>\n\n        </div>\n    )\n});\n\n","import React, {useState} from 'react';\nimport firebase from 'firebase/app';\nimport { useAuth, AuthCheck } from 'reactfire';\nimport 'firebase/auth';\nimport { input } from '../SharedComponents/Input';\nimport { Container, Button, makeStyles, Typography, Snackbar,  } from '@material-ui/core';\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\n// Functional Component Created inside of this component\n// Will only be used to close snackbar\nconst Alert = (props:AlertProps) => {\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\n}\n\n\n\nconst useStyles = makeStyles({\n    googleButton:{\n        backgroundColor: 'rgb(66,133,244)',\n        marginTop: '2em',\n        padding: '0',\n        color: 'white',\n        height: '50px',\n        width: '240px',\n        border: 'none',\n        textAlign: 'center',\n        boxShadow: 'rgb(0 0 0 / 25%) 0px 2px 4px 0px',\n        fontSize: '16px',\n        lineHeight: '48px',\n        display: 'block',\n        borderRadius: '1px',\n        fontFamily: 'Roboto, arial, sans-serif',\n        cursor: 'pointer'\n    },\n    googleLogo:{\n        width: '48px',\n        height: '48px',\n        display: 'block'\n    },\n    typographyStyle: {\n        fontFamily: 'Roboto, arial, sans-serif;',\n        textAlign: 'center',\n        fontSize: '2em'\n    },\n    containerStyle: {\n        marginTop: '2em'\n    },\n    snackBar: {\n        color: 'white',\n        backgroundColor: '#4caf50'\n    }\n\n})\n\ninterface SignInProps{\n    history: RouteComponentProps[\"history\"];\n    location: RouteComponentProps['location'];\n    match: RouteComponentProps['match'];\n  }\n\nexport const SignIn = withRouter( (props:SignInProps) => {\n\n    const auth = useAuth();\n    const classes = useStyles();\n    const { history } = props\n    const [open, setOpen] = useState(false);\n\n    const handleSnackOpen = () => {\n        setOpen(true)\n    }\n\n    const handleSnackClose = (_event?: React.SyntheticEvent, reason?:string) => {\n        if(reason === 'clickaway'){\n            return;\n        }\n\n        setOpen(false)\n        history.push('/')\n    }\n\n    const sign_in = async () => {\n       const response = await auth.signInWithPopup( new firebase.auth.GoogleAuthProvider());\n       if(response.user){\n           handleSnackOpen()\n       }\n    };\n\n    const sign_out = async () => {\n        await auth.signOut();\n    }\n\n    return (\n        <div>\n            <Container maxWidth = 'sm' className={classes.containerStyle}>\n                <Typography className={classes.typographyStyle}>Sign In Below</Typography>\n                <form>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input  name=\"email\" placeholder='Place Email Here' />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input  name=\"password\" placeholder='Place Password Here' />\n                </div>\n                <Button type='submit' variant='contained' color='primary'>Submit</Button>\n                </form>\n                \n                <AuthCheck fallback={\n                    <Button className={classes.googleButton} onClick={sign_in}>Sign In With Google</Button>\n                }>\n                    <Button variant='contained' color='secondary' onClick={sign_out}>Sign Out</Button>\n                </AuthCheck>\n                <Snackbar message={'Success'} open={open} autoHideDuration={6000} onClose={handleSnackClose}>\n                <Alert onClose={handleSnackClose} severity=\"success\">\n                    Successful Sign In - Redirect in 6 secs\n                </Alert>\n                </Snackbar>\n\n            </Container>\n        </div>\n    )\n})","// from pandas import Timestamp\n// import time;\n// import hashlib;\n\n\n// // #timestamp\n// ts = time.time();\n// ts_str = str(float(ts));\n\n\n// #keys\n// public_key = 'a3c785ecc50aa21b134fca1391903926';\n// private_key = 'my_private_key';\n\n// #hash and encodings\n// m_hash = hashlib.md5();\n// ts_str_byte = bytes(ts_str, 'utf-8');\n// private_key_byte = bytes(private_key, 'utf-8');\n// public_key_byte = bytes(public_key, 'utf-8');\n// m_hash.update(ts_str_byte + private_key_byte + public_key_byte);\n// m_hash_str = str(m_hash.digest());\n\n\n// #all request parameters\n// payload = {'ts': ts_str, 'apikey': 'a3c785ecc50aa21b134fca1391903926', 'hash': m_hash_str};\n\n\n// #make request\n// r = requests.get('https://gateway.marvel.com:443/v1/public/characters', params=payload);\n\n\n// #for debugging\n// print(r.url);\n// print(r.json());\n\n    const token = `3963876900386021`\n\n\n// I need a Hero API and Key to add here\nexport const server_calls = {\n    get: async () => {\n        const response = await fetch(`http://gateway.marvel.com/v1/public`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            }\n            \n        });\n        console.log(server_calls)\n        if (!response.ok) {\n            throw new Error('Failed to fetch data from server')\n        }\n\n        return await response.json()\n    },\n\n    create: async (data: any = {}) => {\n        const response = await fetch(`http://gateway.marvel.com/v1/public`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            },\n            body: JSON.stringify(data)\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to Create data from server')\n        }\n\n        return await response.json()\n    },\n\n    update: async (id: string, data: any = {}) => {\n        const response = await fetch(`http://gateway.marvel.com/v1/public/${id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            },\n            body: JSON.stringify(data)\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to UPDATE data from server')\n        }\n\n        return await response.json()\n    },\n\n    delete: async (id: string, data: any = {}) => {\n        const response = await fetch(`http://gateway.marvel.com/v1/public/${id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-access-token': `Bearer ${token}`\n            }\n\n        });\n\n\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport {server_calls } from '../../api';\n\nexport const useGetData = () => {\n    const [heroData, setData] = useState<any>([]);\n\n    async function handleDataFetch(){\n        const result = await server_calls.get();\n        setData(result)\n    }\n\n    //Use Effect Hook\n    useEffect ( () => {\n        handleDataFetch();\n    }, [] )\n\n    return { heroData, getData:handleDataFetch}\n}\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst rootSlice = createSlice({\r\n    name: \"root\",\r\n    initialState: {\r\n        name: 'Camel Man',\r\n        ability: \"Withhold Fluid intake for extended hours\",\r\n        description: \"\",\r\n        camera_quality: '4k',\r\n        flight_time: 'Approx 20mins',\r\n        max_speed: '140 kph',\r\n        Origin: '255 x 312 x 127mm',\r\n        weight: 'Approx 795g',\r\n        cost_of_prod: '450.00',\r\n        series: 'DJI FPV Series'\r\n    },\r\n    reducers: {\r\n        chooseName: (state: { name: any; }, action: { payload: any; }) => { state.name = action.payload},\r\n        chooseability: (state: { ability: any; }, action: { payload: any; }) => { state.ability = action.payload}\r\n    }\r\n})\r\n\r\n// Export Reducer\r\nexport const reducer = rootSlice.reducer;\r\nexport const { chooseName, chooseability, } = rootSlice.actions;","import React from 'react';\r\nimport { useDispatch, useSelector, useStore } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { chooseability, chooseName } from '../../redux/slices/rootSlice';\r\nimport { input } from '../SharedComponents/Input';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { server_calls } from '../../api';\r\n\r\nimport { useGetData } from '../CustomHooks';\r\n\r\n\r\ninterface HeroFormProps {\r\n    id?: string;\r\n    data?: {}\r\n}\r\n\r\ninterface HeroState {\r\n    name: string;\r\n    Ability: string;\r\n}\r\n\r\nexport const MarvelForm = (props: HeroFormProps) => {\r\n\r\n    const dispatch = useDispatch();\r\n    let { heroData, getData } = useGetData();\r\n    const store = useStore()\r\n    const name = useSelector<HeroState>((state: { name: any; }) => state.name)\r\n    const { register, handleSubmit } = useForm({})\r\n\r\n    const onSubmit = (data: any, event: any) => {\r\n        console.log(props.id)\r\n        console.log(props)\r\n        if (props.id!) {\r\n            server_calls.update(props.id!, data)\r\n            console.log(`Updated:${data} ${props.id}`)\r\n            window.location.reload()\r\n            event.target.reset();\r\n        } else {\r\n            dispatch(chooseName(data.name))\r\n            console.log(store.getState())\r\n            // those 2 are in redux slice root slice\r\n            dispatch(chooseability(data.ability))\r\n            // dispatch(chooseDescribtion(data.description))\r\n            server_calls.create(store.getState())\r\n            console.log(data.ability)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                    <label htmlFor=\"name\">Hero Name</label>\r\n                    <input {...register('name')} name=\"name\" placeholder='Name' />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"ability\">Main Ability</label>\r\n                    <input {...register('ability')} name=\"ability\" placeholder=\"ability\" />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"flight_time\">Villains</label>\r\n                    <input {...register('flight_time')} name=\"flight_time\" placeholder=\"Villains\" />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <input {...register('description')} name=\"description\" placeholder=\"Description\" />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"Origin\">Origin</label>\r\n                    <input {...register('Origin')} name=\"Origin\" placeholder=\"Origin\" />\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <label htmlFor=\"series\">Series</label>\r\n                        <input {...register('series')} name=\"series\" placeholder=\"Series\" />\r\n                    </div>\r\n                    <Button type='submit'>Submit</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )}\r\n\r\nfunction chooseDescribtion(description: any): any {\r\n    throw new Error('Function not implemented.');\r\n}\r\n","import * as React from 'react';\nimport { DataGrid, GridColDef,GridValueGetterParams } from '@material-ui/data-grid';\nimport { server_calls } from '../../api/server'; // ADD THIS\nimport { useGetData } from '../CustomHooks'; // ADD THIS\nimport {\n  Button, Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core'; // ADD THESE\n\nimport {MarvelForm} from '../MarvelForm/MarvelForm';\n\n\ninterface gridData {\n  data: {\n    id?: string;\n  }\n}\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 120 },\n  { field: 'Hero Name', headerName: 'Hero Name', width: 200 },\n  { field: 'Ability', headerName: 'Ability', width: 200 },\n  {\n    field: 'Series',\n    headerName: 'Origin',\n    type: 'number',\n    width: 130,\n\n  },\n  { field: 'Color', headerName: 'Color', width: 200 },\n  { field: 'Villains', headerName: 'Villains', width: 200 },\n  //   {\n  //     field: 'fullName',\n  //     headerName: 'Full name',\n  //     description: 'This column has a value getter and is not sortable.',\n  //     sortable: false,\n  //     width: 160,\n  //     valueGetter: (params: ValueGetterParams) =>\n  //       `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n  //   },\n];\n\n\nexport const DataTable = () => {\n\n  let { heroData, getData } = useGetData();\n  let [open, setOpen] = React.useState(false);\n  let [gridData, setData] = React.useState<gridData>({ data: {} })\n\n  let handleOpen = () => {\n    setOpen(true)\n  }\n\n  let handleClose = () => {\n    setOpen(false)\n  }\n\n  let deleteData = () => {\n    server_calls.delete(gridData.data.id!)\n    getData()\n  }\n  console.log(gridData.data.id)\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <h2>Heroes Inventory</h2>\n      <DataGrid rows={heroData} columns={columns} pageSize={5} checkboxSelection onRowSelected={setData} />\n\n      <Button onClick={handleOpen}>Update</Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={deleteData}>Delete</Button>\n\n      {/*Dialog Pop Up begin */}\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Update Heroes</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Update Hero</DialogContentText>\n          <MarvelForm id={gridData.data.id!} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">Cancel</Button>\n          <Button onClick={handleClose} color=\"primary\">Done</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { configureStore} from '@reduxjs/toolkit';\r\nimport { reducer } from './slices/rootSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer,\r\n    devTools: true\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Home,Dashboard, SignIn} from './components'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n}\n\nfrom 'react-router-dom';\n\n\nimport { FirebaseAppProvider, AuthCheck } from 'reactfire'; // New Import\nimport 'firebase/auth'; // NEW IMPORT\nimport { firebaseConfig } from './firebaseConfig' // NEW IMPORT\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}> {/* New Provider */}\n    <Provider store = { store }>\n    <Router>\n      <Switch>\n\n        <Route exact path='/'>\n          <Home title={'Marvel Inventory'}/>\n        </Route>\n\n        <Route path='/dashboard'>\n          <Dashboard></Dashboard>\n        </Route>\n\n        <Route path='/signin'>\n          <SignIn></SignIn>\n        </Route>\n\n      </Switch>\n    </Router>\n    </Provider>\n    </FirebaseAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyBiU30OFuNgIX7j0eviW--6Vk1F9IxIWw0\",\r\n    authDomain: \"marvel-api-rs.firebaseapp.com\",\r\n    projectId: \"marvel-api-rs\",\r\n    storageBucket: \"marvel-api-rs.appspot.com\",\r\n    messagingSenderId: \"760507602478\",\r\n    appId: \"1:760507602478:web:4561d24148bdc28c58b1bf\"\r\n  };"],"sourceRoot":""}